-- UIModule.lua

local UIModule = {}

function UIModule.CreateUI()
    local ScreenGui = Instance.new("ScreenGui")
    ScreenGui.Name = "KickDetectorUI"
    ScreenGui.Parent = game.CoreGui
    
    local MainFrame = Instance.new("Frame")
    MainFrame.Name = "MainFrame"
    MainFrame.Size = UDim2.new(0, 600, 0, 400)
    MainFrame.Position = UDim2.new(0.5, -300, 0.5, -200)
    MainFrame.BackgroundColor3 = Color3.fromRGB(30, 30, 35)
    MainFrame.BorderSizePixel = 0
    MainFrame.Active = true
    MainFrame.Draggable = true
    MainFrame.Parent = ScreenGui
    
    local UICorner = Instance.new("UICorner")
    UICorner.CornerRadius = UDim.new(0, 8)
    UICorner.Parent = MainFrame
    
    local TitleBar = Instance.new("Frame")
    TitleBar.Name = "TitleBar"
    TitleBar.Size = UDim2.new(1, 0, 0, 40)
    TitleBar.BackgroundColor3 = Color3.fromRGB(40, 40, 45)
    TitleBar.BorderSizePixel = 0
    TitleBar.Parent = MainFrame
    
    local UICornerTitle = Instance.new("UICorner")
    UICornerTitle.CornerRadius = UDim.new(0, 8)
    UICornerTitle.Parent = TitleBar
    
    local TitleText = Instance.new("TextLabel")
    TitleText.Name = "TitleText"
    TitleText.Size = UDim2.new(1, -40, 1, 0)
    TitleText.Position = UDim2.new(0, 15, 0, 0)
    TitleText.Text = "Kick Detector"
    TitleText.TextColor3 = Color3.fromRGB(255, 255, 255)
    TitleText.TextSize = 18
    TitleText.Font = Enum.Font.GothamBold
    TitleText.TextXAlignment = Enum.TextXAlignment.Left
    TitleText.BackgroundTransparency = 1
    TitleText.Parent = TitleBar
    
    local CloseButton = Instance.new("TextButton")
    CloseButton.Name = "CloseButton"
    CloseButton.Size = UDim2.new(0, 24, 0, 24)
    CloseButton.Position = UDim2.new(1, -30, 0, 8)
    CloseButton.Text = "X"
    CloseButton.TextColor3 = Color3.fromRGB(255, 255, 255)
    CloseButton.TextSize = 14
    CloseButton.Font = Enum.Font.GothamBold
    CloseButton.BackgroundColor3 = Color3.fromRGB(255, 80, 80)
    CloseButton.Parent = TitleBar
    
    local UICornerClose = Instance.new("UICorner")
    UICornerClose.CornerRadius = UDim.new(0, 4)
    UICornerClose.Parent = CloseButton
    
    local ScanButton = Instance.new("TextButton")
    ScanButton.Name = "ScanButton"
    ScanButton.Size = UDim2.new(0, 120, 0, 35)
    ScanButton.Position = UDim2.new(0, 15, 1, -50)
    ScanButton.Text = "Scan"
    ScanButton.TextColor3 = Color3.fromRGB(255, 255, 255)
    ScanButton.TextSize = 16
    ScanButton.Font = Enum.Font.GothamSemibold
    ScanButton.BackgroundColor3 = Color3.fromRGB(65, 105, 225)
    ScanButton.Parent = MainFrame
    
    local UICornerScan = Instance.new("UICorner")
    UICornerScan.CornerRadius = UDim.new(0, 6)
    UICornerScan.Parent = ScanButton
    
    local ResultsFrame = Instance.new("ScrollingFrame")
    ResultsFrame.Name = "ResultsFrame"
    ResultsFrame.Size = UDim2.new(0.4, -20, 1, -100)
    ResultsFrame.Position = UDim2.new(0, 10, 0, 50)
    ResultsFrame.BackgroundColor3 = Color3.fromRGB(40, 40, 45)
    ResultsFrame.BorderSizePixel = 0
    ResultsFrame.ScrollBarThickness = 6
    ResultsFrame.ScrollBarImageColor3 = Color3.fromRGB(70, 70, 75)
    ResultsFrame.CanvasSize = UDim2.new(0, 0, 0, 0)
    ResultsFrame.Parent = MainFrame
    
    local UICornerResults = Instance.new("UICorner")
    UICornerResults.CornerRadius = UDim.new(0, 6)
    UICornerResults.Parent = ResultsFrame
    
    local UIListLayout = Instance.new("UIListLayout")
    UIListLayout.Padding = UDim.new(0, 5)
    UIListLayout.SortOrder = Enum.SortOrder.LayoutOrder
    UIListLayout.Parent = ResultsFrame
    
    local UIPadding = Instance.new("UIPadding")
    UIPadding.PaddingTop = UDim.new(0, 5)
    UIPadding.PaddingLeft = UDim.new(0, 5)
    UIPadding.PaddingRight = UDim.new(0, 5)
    UIPadding.PaddingBottom = UDim.new(0, 5)
    UIPadding.Parent = ResultsFrame
    
    local CodeViewerFrame = Instance.new("Frame")
    CodeViewerFrame.Name = "CodeViewerFrame"
    CodeViewerFrame.Size = UDim2.new(0.6, -10, 1, -100)
    CodeViewerFrame.Position = UDim2.new(0.4, 0, 0, 50)
    CodeViewerFrame.BackgroundColor3 = Color3.fromRGB(40, 40, 45)
    CodeViewerFrame.BorderSizePixel = 0
    CodeViewerFrame.Parent = MainFrame
    
    local UICornerCode = Instance.new("UICorner")
    UICornerCode.CornerRadius = UDim.new(0, 6)
    UICornerCode.Parent = CodeViewerFrame
    
    local CodeTitle = Instance.new("TextLabel")
    CodeTitle.Name = "CodeTitle"
    CodeTitle.Size = UDim2.new(1, -20, 0, 30)
    CodeTitle.Position = UDim2.new(0, 10, 0, 5)
    CodeTitle.Text = "Code Viewer"
    CodeTitle.TextColor3 = Color3.fromRGB(255, 255, 255)
    CodeTitle.TextSize = 16
    CodeTitle.Font = Enum.Font.GothamSemibold
    CodeTitle.TextXAlignment = Enum.TextXAlignment.Left
    CodeTitle.BackgroundTransparency = 1
    CodeTitle.Parent = CodeViewerFrame
    
    local CodeScroll = Instance.new("ScrollingFrame")
    CodeScroll.Name = "CodeScroll"
    CodeScroll.Size = UDim2.new(1, -20, 1, -45)
    CodeScroll.Position = UDim2.new(0, 10, 0, 35)
    CodeScroll.BackgroundColor3 = Color3.fromRGB(30, 30, 35)
    CodeScroll.BorderSizePixel = 0
    CodeScroll.ScrollBarThickness = 6
    CodeScroll.ScrollBarImageColor3 = Color3.fromRGB(70, 70, 75)
    CodeScroll.CanvasSize = UDim2.new(0, 0, 0, 0)
    CodeScroll.Parent = CodeViewerFrame
    
    local UICornerScroll = Instance.new("UICorner")
    UICornerScroll.CornerRadius = UDim.new(0, 4)
    UICornerScroll.Parent = CodeScroll
    
    local initialMessage = Instance.new("TextLabel")
    initialMessage.Name = "CodeText"
    initialMessage.Size = UDim2.new(1, -10, 0, 30)
    initialMessage.Position = UDim2.new(0, 5, 0, 10)
    initialMessage.Text = "Select a script to view its code..."
    initialMessage.TextColor3 = Color3.fromRGB(150, 150, 150)
    initialMessage.TextSize = 14
    initialMessage.Font = Enum.Font.Code
    initialMessage.TextXAlignment = Enum.TextXAlignment.Left
    initialMessage.TextYAlignment = Enum.TextYAlignment.Top
    initialMessage.BackgroundTransparency = 1
    initialMessage.TextWrapped = false
    initialMessage.Parent = CodeScroll
    
    return {
        MainFrame = MainFrame,
        ResultsFrame = ResultsFrame,
        CodeViewerFrame = CodeViewerFrame,
        ScanButton = ScanButton,
        CloseButton = CloseButton
    }
end

function UIModule.ClearResults(resultsFrame)
    for _, child in pairs(resultsFrame:GetChildren()) do
        if child:IsA("Frame") then
            child:Destroy()
        end
    end
end

function UIModule.DisplayResults(resultsFrame, results, onViewClick)
    for i, result in ipairs(results) do
        local resultItem = Instance.new("Frame")
        resultItem.Name = "ResultItem"
        resultItem.Size = UDim2.new(1, 0, 0, 60)
        resultItem.BackgroundColor3 = Color3.fromRGB(50, 50, 55)
        resultItem.LayoutOrder = i
        resultItem.Parent = resultsFrame
        
        local UICornerItem = Instance.new("UICorner")
        UICornerItem.CornerRadius = UDim.new(0, 4)
        UICornerItem.Parent = resultItem
        
        local ScriptName = Instance.new("TextLabel")
        ScriptName.Name = "ScriptName"
        ScriptName.Size = UDim2.new(1, -10, 0, 20)
        ScriptName.Position = UDim2.new(0, 7, 0, 5)
        ScriptName.Text = result.Name
        ScriptName.TextColor3 = Color3.fromRGB(255, 255, 255)
        ScriptName.TextSize = 14
        ScriptName.Font = Enum.Font.GothamBold
        ScriptName.TextXAlignment = Enum.TextXAlignment.Left
        ScriptName.BackgroundTransparency = 1
        ScriptName.Parent = resultItem
        
        local ScriptPath = Instance.new("TextLabel")
        ScriptPath.Name = "ScriptPath"
        ScriptPath.Size = UDim2.new(1, -80, 0, 20)
        ScriptPath.Position = UDim2.new(0, 7, 0, 25)
        ScriptPath.Text = result.Path
        ScriptPath.TextColor3 = Color3.fromRGB(200, 200, 200)
        ScriptPath.TextSize = 12
        ScriptPath.Font = Enum.Font.Gotham
        ScriptPath.TextXAlignment = Enum.TextXAlignment.Left
        ScriptPath.BackgroundTransparency = 1
        ScriptPath.TextTruncate = Enum.TextTruncate.AtEnd
        ScriptPath.Parent = resultItem
        
        local ViewButton = Instance.new("TextButton")
        ViewButton.Name = "ViewButton"
        ViewButton.Size = UDim2.new(0, 70, 0, 25)
        ViewButton.Position = UDim2.new(1, -80, 0, 20)
        ViewButton.Text = "View"
        ViewButton.TextColor3 = Color3.fromRGB(255, 255, 255)
        ViewButton.TextSize = 14
        ViewButton.Font = Enum.Font.GothamSemibold
        ViewButton.BackgroundColor3 = Color3.fromRGB(65, 105, 225)
        ViewButton.Parent = resultItem
        
        local UICornerView = Instance.new("UICorner")
        UICornerView.CornerRadius = UDim.new(0, 4)
        UICornerView.Parent = ViewButton
        
        ViewButton.MouseButton1Click:Connect(function()
            onViewClick(result)
        end)
    end
    
    resultsFrame.CanvasSize = UDim2.new(0, 0, 0, #results * 65)
end

function UIModule.ShowCodeViewer(codeViewerFrame, script)
    local codeScroll = codeViewerFrame.CodeScroll
    local codeTitle = codeViewerFrame.CodeTitle
    
    -- Clear previous code display
    for _, child in pairs(codeScroll:GetChildren()) do
        if child:IsA("Frame") or (child:IsA("TextLabel") and child.Name ~= "CodeText") then
            child:Destroy()
        end
    end
    
    -- Set title
    codeTitle.Text = script.Name
    
    -- Format code with proper indentation and line numbers
    local source = script.Source
    local lines = {}
    
    -- Split code into lines
    for line in string.gmatch(source, "[^\r\n]+") do
        table.insert(lines, line)
    end
    
    -- Create container for the formatted code
    local codeContainer = Instance.new("Frame")
    codeContainer.Name = "CodeContainer"
    codeContainer.Size = UDim2.new(1, -10, 0, #lines * 20 + 10)
    codeContainer.BackgroundTransparency = 1
    codeContainer.Parent = codeScroll
    
    -- Colors for syntax highlighting
    local colors = {
        keywords = Color3.fromRGB(86, 156, 214),    -- Blue
        strings = Color3.fromRGB(206, 145, 120),    -- Orange-brown
        comments = Color3.fromRGB(87, 166, 74),     -- Green
        functions = Color3.fromRGB(220, 220, 170),  -- Yellow
        numbers = Color3.fromRGB(181, 206, 168),    -- Light green
        operators = Color3.fromRGB(180, 180, 180),  -- Light gray
        default = Color3.fromRGB(220, 220, 220)     -- White-ish
    }
    
    -- Keywords for highlighting
    local keywords = {
        ["and"] = true, ["break"] = true, ["do"] = true, ["else"] = true,
        ["elseif"] = true, ["end"] = true, ["false"] = true, ["for"] = true,
        ["function"] = true, ["if"] = true, ["in"] = true, ["local"] = true,
        ["nil"] = true, ["not"] = true, ["or"] = true, ["repeat"] = true,
        ["return"] = true, ["then"] = true, ["true"] = true, ["until"] = true,
        ["while"] = true, ["continue"] = true
    }
    
    -- Create line number background
    local lineNumbersBg = Instance.new("Frame")
    lineNumbersBg.Name = "LineNumbersBg"
    lineNumbersBg.Size = UDim2.new(0, 40, 1, 0)
    lineNumbersBg.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
    lineNumbersBg.BorderSizePixel = 0
    lineNumbersBg.Parent = codeContainer
    
    -- Create line numbers
    for i, _ in ipairs(lines) do
        local lineNumber = Instance.new("TextLabel")
        lineNumber.Name = "LineNumber_" .. i
        lineNumber.Size = UDim2.new(1, -10, 0, 20)
        lineNumber.Position = UDim2.new(0, 5, 0, (i-1) * 20)
        lineNumber.Text = tostring(i)
        lineNumber.TextColor3 = Color3.fromRGB(150, 150, 150)
        lineNumber.TextSize = 14
        lineNumber.Font = Enum.Font.Code
        lineNumber.TextXAlignment = Enum.TextXAlignment.Right
        lineNumber.BackgroundTransparency = 1
        lineNumber.Parent = lineNumbersBg
    end
    
    -- Create code lines with basic syntax highlighting
    for i, line in ipairs(lines) do
        -- Create line background (for alternating colors)
        local lineBg = Instance.new("Frame")
        lineBg.Name = "LineBg_" .. i
        lineBg.Size = UDim2.new(1, -40, 0, 20)
        lineBg.Position = UDim2.new(0, 40, 0, (i-1) * 20)
        lineBg.BackgroundColor3 = i % 2 == 0 and Color3.fromRGB(35, 35, 35) or Color3.fromRGB(30, 30, 30)
        lineBg.BorderSizePixel = 0
        lineBg.Parent = codeContainer
        
        -- Create basic text label for the line
        local codeLine = Instance.new("TextLabel")
        codeLine.Name = "Line_" .. i
        codeLine.Size = UDim2.new(1, -10, 1, 0)
        codeLine.Position = UDim2.new(0, 5, 0, 0)
        codeLine.Text = line
        codeLine.TextColor3 = colors.default
        codeLine.TextSize = 14
        codeLine.Font = Enum.Font.Code
        codeLine.TextXAlignment = Enum.TextXAlignment.Left
        codeLine.BackgroundTransparency = 1
        codeLine.Parent = lineBg
        
        -- Apply very basic syntax highlighting
        -- Comments
        if string.match(line, "^%s*%-%-") then
            codeLine.TextColor3 = colors.comments
        else
            -- Check for keywords
            for word in string.gmatch(line, "[%a_][%w_]*") do
                if keywords[word] then
                    -- This is a simplification since we can't do partial coloring in a single TextLabel
                    -- In a real implementation, you'd break this into multiple TextLabels
                    if string.match(line, "^%s*" .. word .. "%s") or 
                       string.match(line, "[^%w_]" .. word .. "[^%w_]") then
                        codeLine.TextColor3 = colors.keywords
                        break
                    end
                end
            end
            
            -- Check for strings (simplification)
            if string.match(line, '".-"') or string.match(line, "'.-'") then
                if not string.match(line, "^%s*%-%-") then -- not a comment
                    codeLine.TextColor3 = colors.strings
                end
            end
            
            -- Check for function definitions
            if string.match(line, "function%s+[%w_:%.]+%s*%(") then
                codeLine.TextColor3 = colors.functions
            end
        end
    end
    
    -- Update canvas size
    codeScroll.CanvasSize = UDim2.new(0, 0, 0, #lines * 20 + 10)
end

return UIModule
